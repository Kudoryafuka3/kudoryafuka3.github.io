<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>5. 最长回文子串</title>
    <link href="/2022/05/02/5-%E6%9C%80%E9%95%BF%E5%9B%9E%E6%96%87%E5%AD%90%E4%B8%B2/"/>
    <url>/2022/05/02/5-%E6%9C%80%E9%95%BF%E5%9B%9E%E6%96%87%E5%AD%90%E4%B8%B2/</url>
    
    <content type="html"><![CDATA[<h4 id="暴力解"><a href="#暴力解" class="headerlink" title="暴力解"></a>暴力解</h4><figure class="highlight go"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs go"><span class="hljs-function"><span class="hljs-keyword">func</span> <span class="hljs-title">longestPalindrome</span><span class="hljs-params">(s <span class="hljs-type">string</span>)</span></span> <span class="hljs-type">string</span> &#123;<br><span class="hljs-keyword">if</span> IsPalindrome(s) &#123;<br><span class="hljs-keyword">return</span> s<br>&#125;<br>maxLength := <span class="hljs-number">0</span><br><span class="hljs-keyword">var</span> ans <span class="hljs-type">string</span><br><span class="hljs-keyword">for</span> width := <span class="hljs-number">1</span>; width &lt; <span class="hljs-built_in">len</span>(s); width++ &#123;<br><span class="hljs-keyword">for</span> i := <span class="hljs-number">0</span>; i &lt; <span class="hljs-built_in">len</span>(s)-width+<span class="hljs-number">1</span>; i++ &#123;<br>temp := s[i : i+width]<br><span class="hljs-keyword">if</span> IsPalindrome(temp) &#123;<br><span class="hljs-keyword">if</span> <span class="hljs-built_in">len</span>(temp) &gt; maxLength &#123;<br>maxLength = <span class="hljs-built_in">len</span>(temp)<br>ans = temp<br>&#125;<br>&#125;<br>&#125;<br>&#125;<br><span class="hljs-keyword">return</span> ans<br>&#125;<br><br><span class="hljs-function"><span class="hljs-keyword">func</span> <span class="hljs-title">IsPalindrome</span><span class="hljs-params">(s <span class="hljs-type">string</span>)</span></span> <span class="hljs-type">bool</span> &#123;<br><span class="hljs-keyword">if</span> <span class="hljs-built_in">len</span>(s) == <span class="hljs-number">0</span> || <span class="hljs-built_in">len</span>(s) == <span class="hljs-number">1</span> &#123;<br><span class="hljs-keyword">return</span> <span class="hljs-literal">true</span><br>&#125;<br>i := <span class="hljs-number">0</span><br>j := <span class="hljs-built_in">len</span>(s) - <span class="hljs-number">1</span><br><span class="hljs-keyword">for</span> i &lt; (<span class="hljs-built_in">len</span>(s) / <span class="hljs-number">2</span>) &#123;<br><span class="hljs-keyword">if</span> s[i] != s[j] &#123;<br><span class="hljs-keyword">return</span> <span class="hljs-literal">false</span><br>&#125;<br>i++<br>j--<br>&#125;<br><span class="hljs-keyword">return</span> <span class="hljs-literal">true</span><br>&#125;<br></code></pre></div></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>算法</category>
      
      <category>题解</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>3. 无重复字符的最长子串</title>
    <link href="/2022/04/30/3-%E6%97%A0%E9%87%8D%E5%A4%8D%E5%AD%97%E7%AC%A6%E7%9A%84%E6%9C%80%E9%95%BF%E5%AD%90%E4%B8%B2/"/>
    <url>/2022/04/30/3-%E6%97%A0%E9%87%8D%E5%A4%8D%E5%AD%97%E7%AC%A6%E7%9A%84%E6%9C%80%E9%95%BF%E5%AD%90%E4%B8%B2/</url>
    
    <content type="html"><![CDATA[<h4 id="题解"><a href="#题解" class="headerlink" title="题解"></a>题解</h4><figure class="highlight go"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs go"><span class="hljs-function"><span class="hljs-keyword">func</span> <span class="hljs-title">lengthOfLongestSubstring</span><span class="hljs-params">(s <span class="hljs-type">string</span>)</span></span> <span class="hljs-type">int</span> &#123;<br>    lengthOfString := <span class="hljs-built_in">len</span>(s)<br>    left,right := <span class="hljs-number">0</span>,<span class="hljs-number">0</span><br>    ans := <span class="hljs-number">0</span><br>    <span class="hljs-keyword">if</span> lengthOfString == <span class="hljs-number">0</span> &#123;<br>        <span class="hljs-keyword">return</span> <span class="hljs-number">0</span><br>    &#125;<br>    <span class="hljs-keyword">if</span> lengthOfString == <span class="hljs-number">1</span> &#123;<br>        <span class="hljs-keyword">return</span> <span class="hljs-number">1</span><br>    &#125;<br>    <span class="hljs-keyword">for</span> left=<span class="hljs-number">0</span>; left &lt; lengthOfString;left++&#123;<br>        maps := <span class="hljs-built_in">make</span>(<span class="hljs-keyword">map</span>[<span class="hljs-type">byte</span>]<span class="hljs-type">int</span>)<br>        <span class="hljs-keyword">for</span> right = left;right &lt; lengthOfString; right++ &#123;<br>            <span class="hljs-keyword">if</span> maps[s[right]] == <span class="hljs-number">0</span> &#123;<br>                maps[s[right]]++<br>            &#125; <span class="hljs-keyword">else</span> &#123;<br>                <span class="hljs-keyword">break</span><br>            &#125;<br>        &#125;<br>        ans = max(ans, right - left)<br>        <br>    &#125;<br>    <span class="hljs-keyword">return</span> ans<br>&#125;<br><br><span class="hljs-function"><span class="hljs-keyword">func</span> <span class="hljs-title">max</span><span class="hljs-params">(a, b <span class="hljs-type">int</span>)</span></span> <span class="hljs-type">int</span> &#123;<br><span class="hljs-keyword">if</span> a &gt; b &#123;<br><span class="hljs-keyword">return</span> a<br>&#125;<br><span class="hljs-keyword">return</span> b<br>&#125;<br></code></pre></div></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>算法</category>
      
      <category>题解</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>macOS 自定义 Typora 快捷键</title>
    <link href="/2022/04/26/macOS-%E8%87%AA%E5%AE%9A%E4%B9%89-Typora-%E5%BF%AB%E6%8D%B7%E9%94%AE/"/>
    <url>/2022/04/26/macOS-%E8%87%AA%E5%AE%9A%E4%B9%89-Typora-%E5%BF%AB%E6%8D%B7%E9%94%AE/</url>
    
    <content type="html"><![CDATA[<p>macOS 上行内代码的快捷键上在输入法时中文模式下，没办法用，这样快捷键就失去意义了，还在 macOS 可以自定义快捷键。</p><ol><li><p>打开设置如下</p><p><img src="https://ritsurin-1309788983.cos.ap-guangzhou.myqcloud.com/img/20220426004806.png" alt="image-20220426004806422"></p></li><li><p>点击 “+”，选择 <code>Typora.app</code>，菜单标题选择<code>代码</code></p><p><img src="https://ritsurin-1309788983.cos.ap-guangzhou.myqcloud.com/img/20220426005606.png" alt="image-20220426005605813"></p></li></ol>]]></content>
    
    
    <categories>
      
      <category>记录</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>在终端用 Typora 打开 markdown 文件</title>
    <link href="/2022/04/26/%E5%9C%A8%E7%BB%88%E7%AB%AF%E7%94%A8-Typora-%E6%89%93%E5%BC%80-markdown-%E6%96%87%E4%BB%B6/"/>
    <url>/2022/04/26/%E5%9C%A8%E7%BB%88%E7%AB%AF%E7%94%A8-Typora-%E6%89%93%E5%BC%80-markdown-%E6%96%87%E4%BB%B6/</url>
    
    <content type="html"><![CDATA[<p>用 Hexo 写博客时，一般需要在终端先 new 一下 markdown 文件，然后再写。这时候切到 Finder 或 Typora 再去打开就很麻烦，于是进行如下操作。</p><figure class="highlight shell"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs shell">open -a typora 文件名<br></code></pre></div></td></tr></table></figure><p>其中 <code>open -a typora</code> ➡️ 用 Typora 打开某文件</p><p>为方便使用，将 <code>open -a typora</code> 设置为别名</p><p>我用的 zsh，故以 zsh 为例</p><ol><li><p>打开 <code>~/.zshrc</code></p></li><li><p>可以看到如下部分</p><p><img src="https://ritsurin-1309788983.cos.ap-guangzhou.myqcloud.com/img/20220426010843.png" alt="image-20220426010843495"></p><p>这是 zsh 给的例子，不妨在这之后添加自用的命令别名</p></li><li><p>将如下代码写入 <code>.zshrc</code></p><figure class="highlight abnf"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs abnf">alias typora<span class="hljs-operator">=</span><span class="hljs-string">&quot;open -a typora&quot;</span><br></code></pre></div></td></tr></table></figure></li><li><p>让配置文件立刻生效</p><figure class="highlight sh"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs sh"><span class="hljs-built_in">source</span> ~.zshrc<br></code></pre></div></td></tr></table></figure></li><li><p>查看当前的命令别名</p><figure class="highlight sh"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs sh"><span class="hljs-built_in">alias</span><br></code></pre></div></td></tr></table></figure></li></ol>]]></content>
    
    
    <categories>
      
      <category>记录</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>macOS 隐藏文件夹</title>
    <link href="/2022/04/26/macOS-%E9%9A%90%E8%97%8F%E6%96%87%E4%BB%B6%E5%A4%B9/"/>
    <url>/2022/04/26/macOS-%E9%9A%90%E8%97%8F%E6%96%87%E4%BB%B6%E5%A4%B9/</url>
    
    <content type="html"><![CDATA[<ol><li><p>打开终端</p></li><li><p>输入如下代码</p><figure class="highlight shell"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs shell">chflags hidden+空格<br></code></pre></div></td></tr></table></figure></li><li><p>将需要隐藏的文件夹拖入终端</p></li><li><p><code>Shift + Command + . </code> 可显示隐藏文件夹</p></li><li><p>文件同理</p></li></ol>]]></content>
    
    
    <categories>
      
      <category>记录</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>更换 Mac 软件图标</title>
    <link href="/2022/04/25/%E6%9B%B4%E6%8D%A2-Mac-%E8%BD%AF%E4%BB%B6%E5%9B%BE%E6%A0%87/"/>
    <url>/2022/04/25/%E6%9B%B4%E6%8D%A2-Mac-%E8%BD%AF%E4%BB%B6%E5%9B%BE%E6%A0%87/</url>
    
    <content type="html"><![CDATA[<h4 id="1-如何更换"><a href="#1-如何更换" class="headerlink" title="1. 如何更换"></a>1. 如何更换</h4><ol><li><p>在对应网址中搜索 app 名称</p><p><a href="https://macosicons.com/#/">https://macosicons.com/#/</a></p></li><li><p>下载图标</p></li><li><p><code>Finder</code> ➡️ 应用程序 ➡️ 找到对应 app 右键 ➡️ 显示简介 ➡️ 将下载好的图标拖拽到原图标上，即可完成替换</p></li></ol><h4 id="2-常见问题"><a href="#2-常见问题" class="headerlink" title="2. 常见问题"></a>2. 常见问题</h4><ol><li><p>dock 栏上没有更新图标</p><p>可能是点了<code>在程序坞中保留</code>，暂时先将该选项去掉，然后完全退出应用，再次打开应该没有问题</p></li><li><p>如何换回原图标</p><p><code>Finder</code> ➡️ 应用程序 ➡️ 找到对应 app 右键 ➡️ 显示简介 ➡️  在图标上按<code>退格键</code></p></li></ol>]]></content>
    
    
    <categories>
      
      <category>记录</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>仓库与本地内容不一致问题</title>
    <link href="/2022/04/20/%E4%BB%93%E5%BA%93%E4%B8%8E%E6%9C%AC%E5%9C%B0%E5%86%85%E5%AE%B9%E4%B8%8D%E4%B8%80%E8%87%B4%E9%97%AE%E9%A2%98/"/>
    <url>/2022/04/20/%E4%BB%93%E5%BA%93%E4%B8%8E%E6%9C%AC%E5%9C%B0%E5%86%85%E5%AE%B9%E4%B8%8D%E4%B8%80%E8%87%B4%E9%97%AE%E9%A2%98/</url>
    
    <content type="html"><![CDATA[<p>今天发现一个问题，当我在本地仓库更新目录结构后，push 到 GitHub，但是远程仓库并没有发现对应的修改。于是在网上找该问题的解决办法，发现修改 <code>.gitignore</code> 文件内容后，再次 push 就成功了，暂时不清楚原因，所以先记录一下， <code>.gitignore</code> 内容如下：</p><figure class="highlight clean"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs clean"># OS generated files #<br>######################<br>.DS_Store<br>.DS_Store?<br>._*<br>.Spotlight-V100<br>.Trashes<br>ehthumbs.db<br>Thumbs.db <br></code></pre></div></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>记录</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>通过 Amazon 获取图书的封面</title>
    <link href="/2022/03/31/%E9%80%9A%E8%BF%87-Amazon-%E8%8E%B7%E5%8F%96%E5%9B%BE%E4%B9%A6%E7%9A%84%E5%B0%81%E9%9D%A2/"/>
    <url>/2022/03/31/%E9%80%9A%E8%BF%87-Amazon-%E8%8E%B7%E5%8F%96%E5%9B%BE%E4%B9%A6%E7%9A%84%E5%B0%81%E9%9D%A2/</url>
    
    <content type="html"><![CDATA[<h4 id="1-打开亚马逊官网"><a href="#1-打开亚马逊官网" class="headerlink" title="1. 打开亚马逊官网"></a>1. 打开亚马逊官网</h4><p>地址：<a href="https://www.amazon.cn/">https://www.amazon.cn/</a></p><h4 id="2-搜索图书"><a href="#2-搜索图书" class="headerlink" title="2. 搜索图书"></a>2. 搜索图书</h4><p>这里以《ARKit 原生开发 入门精粹》为例</p><img src="https://ritsurin-1309788983.cos.ap-guangzhou.myqcloud.com/img/20220331224718.png" alt="image-20220331224718125" style="zoom:25%;" /><h4 id="3-获取-ASIN-编号"><a href="#3-获取-ASIN-编号" class="headerlink" title="3. 获取 ASIN 编号"></a>3. 获取 ASIN 编号</h4><img src="https://ritsurin-1309788983.cos.ap-guangzhou.myqcloud.com/img/20220331224733.png" alt="image-20220331224733211" style="zoom:40%;" /><p>该书的 ASIN：B09995RR9H</p><h4 id="4-将-ASIN-填入封面地址"><a href="#4-将-ASIN-填入封面地址" class="headerlink" title="4. 将 ASIN 填入封面地址"></a>4. 将 ASIN 填入封面地址</h4><figure class="highlight shell"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs shell"><span class="hljs-meta prompt_"># </span><span class="language-bash">首选</span><br>https://m.media-amazon.com/images/P/*****.01.MAIN._SCRM_.jpg<br><span class="hljs-meta prompt_"># </span><span class="language-bash">备选</span><br>http://s3.cn-north-1.amazonaws.com.cn/sitbweb-cn/content/*****/images/cover.jpg<br></code></pre></div></td></tr></table></figure><p>事例的封面地址为：</p><figure class="highlight shell"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs shell">https://m.media-amazon.com/images/P/B09995RR9H.01.MAIN._SCRM_.jpg<br></code></pre></div></td></tr></table></figure><p>浏览器打开该链接，即可得到图书封面</p>]]></content>
    
    
    <categories>
      
      <category>记录</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>centos 安装 tomcat</title>
    <link href="/2022/03/21/centos-%E5%AE%89%E8%A3%85-tomcat/"/>
    <url>/2022/03/21/centos-%E5%AE%89%E8%A3%85-tomcat/</url>
    
    <content type="html"><![CDATA[<h4 id="1-下载-Tomcat"><a href="#1-下载-Tomcat" class="headerlink" title="1. 下载 Tomcat"></a>1. 下载 Tomcat</h4><p>Tomcat 官网：<a href="https://tomcat.apache.org/">https://tomcat.apache.org/</a></p><p>以 Tomcat9.0 为🌰</p><img src="https://ritsurin-1309788983.cos.ap-guangzhou.myqcloud.com/img/20220321195558.png" alt="截屏2022-03-21 19.55.30" style="zoom:20%;" /><img src="https://ritsurin-1309788983.cos.ap-guangzhou.myqcloud.com/img/20220321195652.png" alt="截屏2022-03-21 19.56.25" style="zoom:33%;" /><h4 id="2-用-SFTP-工具上传到服务器"><a href="#2-用-SFTP-工具上传到服务器" class="headerlink" title="2. 用 SFTP 工具上传到服务器"></a>2. 用 SFTP 工具上传到服务器</h4><h4 id="3-解压-tar"><a href="#3-解压-tar" class="headerlink" title="3. 解压 tar"></a>3. 解压 tar</h4><figure class="highlight shell"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs shell">tar -zxvf apache-tomcat-9.0.60.tar.gz<br></code></pre></div></td></tr></table></figure><h4 id="4-启动-Tomcat"><a href="#4-启动-Tomcat" class="headerlink" title="4. 启动 Tomcat"></a>4. 启动 Tomcat</h4><figure class="highlight shell"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs shell">cd apache-tomcat-9.0.60/<br>cd bin<br>bash startup.sh <br></code></pre></div></td></tr></table></figure><h4 id="5-查看是否启动成功"><a href="#5-查看是否启动成功" class="headerlink" title="5. 查看是否启动成功"></a>5. 查看是否启动成功</h4><p>服务器 IP:8080</p><img src="https://ritsurin-1309788983.cos.ap-guangzhou.myqcloud.com/img/20220321195931.png" alt="image-20220321195931183" style="zoom:33%;" />]]></content>
    
    
    <categories>
      
      <category>记录</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>apple 开发者账户 Bundle Identifier 问题</title>
    <link href="/2022/03/21/apple-%E5%BC%80%E5%8F%91%E8%80%85%E8%B4%A6%E6%88%B7-Bundle-Identifier-%E9%97%AE%E9%A2%98/"/>
    <url>/2022/03/21/apple-%E5%BC%80%E5%8F%91%E8%80%85%E8%B4%A6%E6%88%B7-Bundle-Identifier-%E9%97%AE%E9%A2%98/</url>
    
    <content type="html"><![CDATA[<p>Your maximum App ID limit has been reached. You may create up to 10 App IDs every 7 days.</p><p>意思是免费账户 7 天内只能够创建 10 个 app id</p><p><strong>解决办法：</strong>每次都用同一个 id</p><p><img src="https://ritsurin-1309788983.cos.ap-guangzhou.myqcloud.com/img/20220321125751.png" alt="image-20220321125750994"></p><p>在这边修改，记得查看一下 Debug 与 Release 中是否也修改为同一个 id</p>]]></content>
    
    
    <categories>
      
      <category>记录</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>mac 修改 DNS</title>
    <link href="/2022/03/20/mac-%E4%BF%AE%E6%94%B9-DNS/"/>
    <url>/2022/03/20/mac-%E4%BF%AE%E6%94%B9-DNS/</url>
    
    <content type="html"><![CDATA[<figure class="highlight shell"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs shell">cat /etc/resolv.conf <br><span class="hljs-meta prompt_"># </span><span class="language-bash">查看当前 DNS</span><br>networksetup -listallnetworkservices <br><span class="hljs-meta prompt_"># </span><span class="language-bash">查看网络</span><br>networksetup -setdnsservers Wi-Fi 223.5.5.5 223.6.6.6 <br><span class="hljs-meta prompt_"># </span><span class="language-bash">设置 Wi-Fi 连接的 DNS 为阿里 DNS</span><br>sudo dscacheutil -flushcache;sudo killall -HUP mDNSResponder; <br><span class="hljs-meta prompt_"># </span><span class="language-bash">管理员强制刷新</span> <br></code></pre></div></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>记录</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>Failed to instantiate the default view controller for UIMainStoryboardFile &#39;Main&#39; - perhaps the designated entry point is not set?</title>
    <link href="/2022/03/20/Failed-to-instantiate-the-default-view-controller-for-UIMainStoryboardFile-Main-perhaps-the-designated-entry-point-is-not-set/"/>
    <url>/2022/03/20/Failed-to-instantiate-the-default-view-controller-for-UIMainStoryboardFile-Main-perhaps-the-designated-entry-point-is-not-set/</url>
    
    <content type="html"><![CDATA[<p>Failed to instantiate the default view controller for UIMainStoryboardFile ‘Main’ - perhaps the designated entry point is not set?</p><p><img src="https://ritsurin-1309788983.cos.ap-guangzhou.myqcloud.com/img/20220320153150.png" alt="截屏2022-03-20 15.30.34"></p><p>勾选：<code>Is initial View Controller</code></p>]]></content>
    
    
    <categories>
      
      <category>记录</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>Xcode 依赖添加失败问题</title>
    <link href="/2022/03/19/Xcode-%E4%BE%9D%E8%B5%96%E6%B7%BB%E5%8A%A0%E5%A4%B1%E8%B4%A5%E9%97%AE%E9%A2%98/"/>
    <url>/2022/03/19/Xcode-%E4%BE%9D%E8%B5%96%E6%B7%BB%E5%8A%A0%E5%A4%B1%E8%B4%A5%E9%97%AE%E9%A2%98/</url>
    
    <content type="html"><![CDATA[<p><img src="https://ritsurin-1309788983.cos.ap-guangzhou.myqcloud.com/img/20220319144247.png" alt="image-20220319115723023"></p><p><img src="https://ritsurin-1309788983.cos.ap-guangzhou.myqcloud.com/img/20220319144248.png" alt="image-20220319142013016"></p><p>我的解决方案：</p><ol><li>魔法工具🪄开<code>全局</code></li><li><code>xcode</code> ➡️ <code>File</code> ➡️ <code>Packages</code> ➡️ <code>Reset Package Caches</code></li></ol>]]></content>
    
    
    <categories>
      
      <category>记录</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>Non-constant range: argument must be an integer literal</title>
    <link href="/2022/03/18/Non-constant-range-argument-must-be-an-integer-literal/"/>
    <url>/2022/03/18/Non-constant-range-argument-must-be-an-integer-literal/</url>
    
    <content type="html"><![CDATA[<p>Non-constant range: argument must be an integer literal</p><figure class="highlight swift"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs swift"><span class="hljs-type">ForEach</span>(<span class="hljs-number">0</span><span class="hljs-operator">..&lt;</span><span class="hljs-keyword">self</span>.models.count)<br><span class="hljs-operator">➡️</span><br><span class="hljs-type">ForEach</span>(<span class="hljs-number">0</span><span class="hljs-operator">..&lt;</span><span class="hljs-keyword">self</span>.models.count,id:\.<span class="hljs-keyword">self</span>)<br></code></pre></div></td></tr></table></figure><blockquote><p>记录，暂不清楚原因</p></blockquote>]]></content>
    
    
    <categories>
      
      <category>记录</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>利用腾讯云 COS + PicGo-Core 搭建图床</title>
    <link href="/2022/03/17/%E5%88%A9%E7%94%A8%E8%85%BE%E8%AE%AF%E4%BA%91-COS-PicGo-Core-%E6%90%AD%E5%BB%BA%E5%9B%BE%E5%BA%8A/"/>
    <url>/2022/03/17/%E5%88%A9%E7%94%A8%E8%85%BE%E8%AE%AF%E4%BA%91-COS-PicGo-Core-%E6%90%AD%E5%BB%BA%E5%9B%BE%E5%BA%8A/</url>
    
    <content type="html"><![CDATA[<h4 id="1-安装-PicGo-Core"><a href="#1-安装-PicGo-Core" class="headerlink" title="1. 安装 PicGo-Core"></a>1. 安装 PicGo-Core</h4><ul><li><p>mac 上利用 npm 安装：<code>npm install picgo -g</code></p><p>(没有 npm 的话百度一下很快)</p></li><li><p>windows 上就简单了，设置里直接选择就好了，手边没有 win 的电脑就不截图了</p></li></ul><h4 id="2-购买对象存储服务"><a href="#2-购买对象存储服务" class="headerlink" title="2. 购买对象存储服务"></a>2. 购买对象存储服务</h4><p>其实这里买腾讯云、阿里云等都可以，这里以腾讯云为例</p><h4 id="3-创建存储桶"><a href="#3-创建存储桶" class="headerlink" title="3. 创建存储桶"></a>3. 创建存储桶</h4><img src="https://ritsurin-1309788983.cos.ap-guangzhou.myqcloud.com/img/20220317221831.png" alt="image-20220317221831480" style="zoom:33%;" /><img src="https://ritsurin-1309788983.cos.ap-guangzhou.myqcloud.com/img/20220317221920.png" alt="image-20220317221920521" style="zoom: 33%;" /><ul><li>名称创建完就无法更改</li><li>要选择<code>公有读私有写</code></li></ul><h4 id="4-创建腾讯云密钥"><a href="#4-创建腾讯云密钥" class="headerlink" title="4. 创建腾讯云密钥"></a>4. 创建腾讯云密钥</h4><img src="https://ritsurin-1309788983.cos.ap-guangzhou.myqcloud.com/img/20220317222530.png" alt="image-20220317222530159" style="zoom:33%;" /><p>最底下的密钥管理</p><p><img src="https://ritsurin-1309788983.cos.ap-guangzhou.myqcloud.com/img/20220317222605.png" alt="image-20220317222604985"></p><p>继续使用 ➡️ 新建密钥</p><p><img src="https://ritsurin-1309788983.cos.ap-guangzhou.myqcloud.com/img/20220317222617.png" alt="image-20220317222617207"></p><h4 id="5-进行-PicGo-Core-配置"><a href="#5-进行-PicGo-Core-配置" class="headerlink" title="5. 进行 PicGo-Core 配置"></a>5. 进行 PicGo-Core 配置</h4><ul><li>linux 和 macOS 均为 <code>~/.picgo/config.json</code></li><li>windows 则为 <code>C:\Users\你的用户名\.picgo\config.json</code></li></ul><p>mac 在聚焦中搜索 <code>~/.picgo</code>，可访问该文件夹，打开其中的 config.json</p><figure class="highlight json"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs json"><span class="hljs-punctuation">&#123;</span><br>  <span class="hljs-attr">&quot;picBed&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">&#123;</span><br>    <span class="hljs-attr">&quot;current&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;tcyun&quot;</span><span class="hljs-punctuation">,</span><br>    <span class="hljs-attr">&quot;uploader&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;tcyun&quot;</span><span class="hljs-punctuation">,</span><br>    <span class="hljs-attr">&quot;tcyun&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">&#123;</span><br>      <span class="hljs-attr">&quot;appId&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;密钥的 APPID&quot;</span><span class="hljs-punctuation">,</span><br>      <span class="hljs-attr">&quot;area&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;ap-桶的地区&quot;</span><span class="hljs-punctuation">,</span><br>      <span class="hljs-attr">&quot;bucket&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;桶的名字，记得算上 -数字 &quot;</span><span class="hljs-punctuation">,</span><br>      <span class="hljs-attr">&quot;customUrl&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;桶的访问链接，在桶的概览中&quot;</span><span class="hljs-punctuation">,</span><br>      <span class="hljs-attr">&quot;path&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;img/&quot;</span><span class="hljs-punctuation">,</span><br>      <span class="hljs-attr">&quot;secretId&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;密钥的 secretId&quot;</span><span class="hljs-punctuation">,</span><br>      <span class="hljs-attr">&quot;secretKey&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;密钥的 SecretKey&quot;</span><span class="hljs-punctuation">,</span><br>      <span class="hljs-attr">&quot;version&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;v5&quot;</span><br>    <span class="hljs-punctuation">&#125;</span><br>  <span class="hljs-punctuation">&#125;</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;picgoPlugins&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">&#123;</span><span class="hljs-punctuation">&#125;</span><br><span class="hljs-punctuation">&#125;</span><br></code></pre></div></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>记录</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>70. 爬楼梯</title>
    <link href="/2022/03/15/70-%E7%88%AC%E6%A5%BC%E6%A2%AF/"/>
    <url>/2022/03/15/70-%E7%88%AC%E6%A5%BC%E6%A2%AF/</url>
    
    <content type="html"><![CDATA[<h4 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h4><p>F(n) &#x3D; F(n-1) + F(n-2)</p><p>用递归会超时，所以用循环来写</p><h4 id="题解"><a href="#题解" class="headerlink" title="题解"></a>题解</h4><figure class="highlight go"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs go"><span class="hljs-function"><span class="hljs-keyword">func</span> <span class="hljs-title">climbStairs</span><span class="hljs-params">(n <span class="hljs-type">int</span>)</span></span> <span class="hljs-type">int</span> &#123;<br>    <span class="hljs-keyword">if</span> n == <span class="hljs-number">1</span>&#123;<br>        <span class="hljs-keyword">return</span> <span class="hljs-number">1</span><br>    &#125;<br>    <span class="hljs-keyword">if</span> n == <span class="hljs-number">2</span> &#123;<br>        <span class="hljs-keyword">return</span> <span class="hljs-number">2</span><br>    &#125;<br>    i := <span class="hljs-number">1</span><br>    j := <span class="hljs-number">2</span><br>    k := i+j<br>    <span class="hljs-keyword">for</span> m:=<span class="hljs-number">3</span>; m &lt;=n; m++ &#123;<br>        k = i+j<br>        i = j<br>        j = k<br>    &#125;<br>    <span class="hljs-keyword">return</span> k<br>&#125;<br></code></pre></div></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>算法</category>
      
      <category>题解</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>Goland 控制台隐藏多于的信息</title>
    <link href="/2022/03/15/Goland-%E6%8E%A7%E5%88%B6%E5%8F%B0%E9%9A%90%E8%97%8F%E5%A4%9A%E4%BA%8E%E7%9A%84%E4%BF%A1%E6%81%AF/"/>
    <url>/2022/03/15/Goland-%E6%8E%A7%E5%88%B6%E5%8F%B0%E9%9A%90%E8%97%8F%E5%A4%9A%E4%BA%8E%E7%9A%84%E4%BF%A1%E6%81%AF/</url>
    
    <content type="html"><![CDATA[<ol><li><p><code>cmd + shift + A</code></p></li><li><p>输入 <code>Registry</code></p></li><li><p>找到 <code>go.run.process.with.pty</code> 取消前面的勾</p></li><li><p>效果如下</p><p><img src="https://gitee.com/liskarmw/typora-pictures/raw/master/img/20220315131327.png" alt="image-20220305111802759"></p></li></ol>]]></content>
    
    
    <categories>
      
      <category>记录</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>BFS</title>
    <link href="/2022/03/15/BFS/"/>
    <url>/2022/03/15/BFS/</url>
    
    <content type="html"><![CDATA[<h4 id="BFS-伪代码"><a href="#BFS-伪代码" class="headerlink" title="BFS 伪代码"></a>BFS 伪代码</h4><figure class="highlight go"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs go">while queue 非空:<br>node = queue.pop()<br>    <span class="hljs-keyword">for</span> node 的所有相邻结点 m:<br>        <span class="hljs-keyword">if</span> m 未访问过:<br>            queue.push(m)<br></code></pre></div></td></tr></table></figure><h4 id="求无权最短路径的-BFS-伪代码"><a href="#求无权最短路径的-BFS-伪代码" class="headerlink" title="求无权最短路径的  BFS 伪代码"></a>求无权最短路径的  BFS 伪代码</h4><p>求 A 点到 B 点的最短距离，就是看 A 点到 B 点有多少层，所以需要修改代码，记录层数</p><figure class="highlight go"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs go">depth = <span class="hljs-number">0</span> # 记录遍历到第几层<br>while queue 非空:<br>    depth++<br>    n = queue 中的元素个数<br>    循环 n 次:<br>        node = queue.pop()<br>        <span class="hljs-keyword">for</span> node 的所有相邻结点 m:<br>            <span class="hljs-keyword">if</span> m 未访问过:<br>                queue.push(m)<br></code></pre></div></td></tr></table></figure><h4 id="Golang-实现"><a href="#Golang-实现" class="headerlink" title="Golang 实现"></a>Golang 实现</h4><figure class="highlight go"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs go"> <span class="hljs-keyword">var</span> griph [][]<span class="hljs-type">int</span>,<br>visited := <span class="hljs-built_in">make</span>([]<span class="hljs-type">bool</span>, <span class="hljs-built_in">len</span>(graph))<br>visited[<span class="hljs-number">0</span>] = <span class="hljs-literal">true</span> <span class="hljs-comment">// 是否访问</span><br>depth := <span class="hljs-number">0</span> <span class="hljs-comment">// 层</span><br>queue := <span class="hljs-built_in">make</span>([]<span class="hljs-type">int</span>, <span class="hljs-number">0</span>) <span class="hljs-comment">// 模拟队列</span><br>queue = <span class="hljs-built_in">append</span>(queue, <span class="hljs-number">0</span>)<br>dist := <span class="hljs-built_in">make</span>([]<span class="hljs-type">int</span>, <span class="hljs-built_in">len</span>(graph)) <span class="hljs-comment">// 0 节点到每个节点的距离</span><br><span class="hljs-keyword">for</span> <span class="hljs-built_in">len</span>(queue) != <span class="hljs-number">0</span> &#123;<br>depth++<br>n := <span class="hljs-built_in">len</span>(queue)<br><span class="hljs-keyword">for</span> i := <span class="hljs-number">0</span>; i &lt; n; i++ &#123;<br>node := queue[<span class="hljs-number">0</span>]<br>queue = <span class="hljs-built_in">append</span>(queue[:<span class="hljs-number">0</span>], queue[<span class="hljs-number">1</span>:]...)<br><span class="hljs-keyword">for</span> j := <span class="hljs-number">0</span>; j &lt; <span class="hljs-built_in">len</span>(graph); j++ &#123;<br><span class="hljs-keyword">if</span> graph[node][j] == <span class="hljs-number">1</span> &#123;<br><span class="hljs-keyword">if</span> visited[j] == <span class="hljs-literal">false</span> &#123;<br>visited[j] = <span class="hljs-literal">true</span><br>queue = <span class="hljs-built_in">append</span>(queue, j)<br>dist[j] = depth<br>&#125;<br>&#125;<br>&#125;<br>&#125;<br>&#125;<br></code></pre></div></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>算法</category>
      
      <category>学习</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>hexo 搭建博客并部署到 GitHub Page</title>
    <link href="/2022/03/14/hexo-%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2%E5%B9%B6%E9%83%A8%E7%BD%B2%E5%88%B0-GitHub-Page/"/>
    <url>/2022/03/14/hexo-%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2%E5%B9%B6%E9%83%A8%E7%BD%B2%E5%88%B0-GitHub-Page/</url>
    
    <content type="html"><![CDATA[<h4 id="1-确保电脑有-node-环境"><a href="#1-确保电脑有-node-环境" class="headerlink" title="1. 确保电脑有 node 环境"></a>1. 确保电脑有 node 环境</h4><figure class="highlight shell"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs shell">node -v<br>npm -v<br></code></pre></div></td></tr></table></figure><p>输出如下：</p><p><img src="https://gitee.com/liskarmw/typora-pictures/raw/master/img/20220314213608.png" alt="image-20220314213607755"></p><p>没有 node 环境就百度装下，很快</p><h4 id="2-安装-hexo"><a href="#2-安装-hexo" class="headerlink" title="2. 安装 hexo"></a>2. 安装 hexo</h4><blockquote><p>中文官网地址：<a href="https://hexo.io/zh-cn/">https://hexo.io/zh-cn/</a></p></blockquote><figure class="highlight shell"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs shell">npm install hexo-cli -g<br></code></pre></div></td></tr></table></figure><h4 id="3-在你喜欢的位置新建一个文件夹"><a href="#3-在你喜欢的位置新建一个文件夹" class="headerlink" title="3. 在你喜欢的位置新建一个文件夹"></a>3. 在你喜欢的位置新建一个文件夹</h4><p>该文件夹用于存储 hexo 文件，以后本地上的博客内容也在里面</p><p>&#x3D;&#x3D;命令行进入该文件夹&#x3D;&#x3D;</p><figure class="highlight shell"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs shell">hexo init<br></code></pre></div></td></tr></table></figure><p><img src="https://gitee.com/liskarmw/typora-pictures/raw/master/img/20220314214020.png" alt="image-20220314214019975"></p><p>需要等待亿小会</p><h4 id="4-安装部署插件"><a href="#4-安装部署插件" class="headerlink" title="4. 安装部署插件"></a>4. 安装部署插件</h4><figure class="highlight shell"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs shell">npm install hexo-deployer-git --save<br></code></pre></div></td></tr></table></figure><h4 id="5-测试本机-ssh-key"><a href="#5-测试本机-ssh-key" class="headerlink" title="5. 测试本机 ssh key"></a>5. 测试本机 ssh key</h4><figure class="highlight sh"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs sh">ssh -T git@github.com <br></code></pre></div></td></tr></table></figure><p>若输出 <code>Hi ...</code>，则说明本机 ssh 配置完成</p><p>若输出其他，表示未配置 ssh</p><p><a href="https://segmentfault.com/a/1190000017986794">如何配置可参考该文章</a></p><h4 id="6-在-GitHub-上创建仓库"><a href="#6-在-GitHub-上创建仓库" class="headerlink" title="6. 在 GitHub 上创建仓库"></a>6. 在 GitHub 上创建仓库</h4><p>仓库名为：<code>你的用户名.github.io</code></p><p>比如我的用户名为 liskarmw，则仓库名为 <code>liskarmw.github.io</code></p><p>&#x3D;&#x3D;不可更改&#x3D;&#x3D;</p><h4 id="7-打开-hexo-本地文件夹，修改-config-yml-配置"><a href="#7-打开-hexo-本地文件夹，修改-config-yml-配置" class="headerlink" title="7. 打开 hexo 本地文件夹，修改 _config.yml 配置"></a>7. 打开 hexo 本地文件夹，修改 _config.yml 配置</h4><p><img src="https://gitee.com/liskarmw/typora-pictures/raw/master/img/20220314214651.png" alt="截屏2022-03-14 21.45.50"></p><figure class="highlight yml"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs yml"><span class="hljs-attr">deploy:</span><br>  <span class="hljs-attr">type:</span> <span class="hljs-string">git</span><br>  <span class="hljs-attr">repository:</span><br>    <span class="hljs-attr">github:</span> <span class="hljs-string">此处为仓库</span> <span class="hljs-string">ssh</span> <span class="hljs-string">链接</span><br>  <span class="hljs-attr">branch:</span> <span class="hljs-string">master</span><br></code></pre></div></td></tr></table></figure><h4 id="8-命令行输入命令测试"><a href="#8-命令行输入命令测试" class="headerlink" title="8. 命令行输入命令测试"></a>8. 命令行输入命令测试</h4><p>依次输入</p><figure class="highlight ebnf"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs ebnf"><span class="hljs-attribute">hexo clean</span><br><span class="hljs-attribute">hexo g</span><br><span class="hljs-attribute">hexo d</span><br></code></pre></div></td></tr></table></figure><p>等待 push 完成，在浏览器地址栏输入刚刚的仓库名，测试是否能正常访问</p><h4 id="9-开始写作"><a href="#9-开始写作" class="headerlink" title="9. 开始写作"></a>9. 开始写作</h4><figure class="highlight shell"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs shell">hexo new &quot;文章名&quot;<br></code></pre></div></td></tr></table></figure><p>文章路径为 <code>source/_post</code></p><p>推送</p><figure class="highlight shell"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs shell">hexo clean<br>hexo g<br>hexo d<br></code></pre></div></td></tr></table></figure><h4 id="10-自用主题"><a href="#10-自用主题" class="headerlink" title="10. 自用主题"></a>10. 自用主题</h4><p><a href="https://butterfly.js.org/">https://butterfly.js.org/</a></p>]]></content>
    
    
    <categories>
      
      <category>记录</category>
      
    </categories>
    
    
  </entry>
  
  
  
  
</search>
